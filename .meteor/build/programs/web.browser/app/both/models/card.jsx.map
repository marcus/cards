{"version":3,"sources":["meteor://ðŸ’»app/both/models/card.jsx"],"names":[],"mappings":";;;;;;;;AAAA,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAEtC,MAAM,CAAC,OAAO,CAAC,YAAW;;AACxB,MAAI,MAAM,CAAC,QAAQ,EAAE;;;AAEnB,mBAAe,CAAC,KAAK,EAAE,UAAC,IAAI,EAAK;AAC/B,UAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;eAAK,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU;OAAA,CAAC,CAAC;AACxD,WAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KAC5C,CAAC,CAAC;;;AAGH,SAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;GACtD;CACF,CAAC,CAAC;;AAEH,IAAI,IAAI,GAAG,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;AACxC,IAAI,GAAG;AACL,QAAM,YAAC,IAAI,EAAE;AACV,WAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;GAC5B;;AAED,QAAM,YAAC,IAAI,EAAE;AACX,QAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;AAClB,WAAO,IAAI,CAAC,GAAG,CAAC;AAChB,WAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;AACnC,WAAO,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;AACtB,UAAI,EAAE,IAAI;KACX,CAAC,CAAC;GACJ;;AAED,YAAM,UAAC,MAAM,EAAE;AACb,SAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;GACtB;;AAED,SAAO,cAAG;AACR,WAAO,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;GAC/C;CACF,CAAC,uE","file":"/both/models/card.jsx","sourcesContent":["Cards = new Mongo.Collection('cards');\n\nMeteor.startup(function() { // work around files not being defined yet\n  if (Meteor.isClient) { // work around not having actions in /both folder\n    // trigger action when this changes\n    trackCollection(Cards, (data) => {\n      data = data.sort((a, b) => b.created_at - a.created_at);\n      store.dispatch(Actions.cardsChanged(data));\n    });\n\n    // First run\n    store.dispatch(Actions.cardsChanged(Card.findAll()));\n  }\n});\n\nlet sort = { created_at: -1, title: 1 };\nCard = {\n  create(card) {\n     return Cards.insert(card);\n  },\n\n  update(card) {\n    let id = card._id;\n    delete card._id;\n    console.log('updating card', card);\n    return Cards.update(id, {\n      $set: card,\n    });\n  },\n\n  delete(cardId) {\n    Cards.remove(cardId);\n  },\n\n  findAll() {\n    return Cards.find({}, { sort: sort }).fetch();\n  }\n};\n"]}