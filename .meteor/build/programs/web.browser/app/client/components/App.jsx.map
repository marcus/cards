{"version":3,"sources":["meteor://ðŸ’»app/client/components/App.jsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC1B,QAAM,EAAE,CAAC,OAAO,CAAC;;AAEjB,oBAAkB,cAAG;AACnB,QAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACrC,QAAI,CAAC,OAAO,EAAE,CAAC;GAChB;;AAED,sBAAoB,cAAG;AACrB,QAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;GACjB;;AAED,WAAS,EAAE;AACT,SAAK,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK;AAC5B,cAAU,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;GACnC;;AAED,YAAU,YAAC,KAAK,EAAE;AAChB,SAAK,CAAC,eAAe,EAAE,CAAC;AACxB,SAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;GACtC;;AAED,QAAM,cAAG;;;;AAEP,WACE;;QAAK,SAAS,EAAC,OAAO;MACpB;AAAC,YAAI;UAAC,KAAK,EAAE,IAAK;QAEhB;AAAC,gBAAM;YAAC,YAAY,EAAE,CAAE;UACtB;AAAC,oBAAQ;cAAC,OAAO,EAAE;uBAAM,MAAK,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC;eAAC,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,SAAS,EAAE;YACrF,2BAAG,SAAS,EAAC,cAAc,EAAC,KAAK,EAAE,EAAC,WAAW,EAAE,CAAC,EAAE,GAAG;;WAE9C;UAEX;AAAC,0BAAc;cAAC,QAAQ,EAAE,CAAE;YAE1B;AAAC,iBAAG;gBAAC,MAAM,QAAC,KAAK;cACf;AAAC,uBAAO;kBAAC,QAAQ,EAAE,CAAE,EAAC,IAAI,EAAC,GAAG,EAAC,OAAO,EAAE,IAAI,CAAC,UAAW;gBACtD,2BAAG,SAAS,EAAC,YAAY,EAAC,KAAK,EAAE,EAAC,WAAW,EAAE,CAAC,EAAE,GAAG;;eAE7C;aACN;WAES;SACV;OACJ;MACP;AAAC,YAAI;;QACF,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC;OAC/C;KACH,CACN;GACH;CACF,CAAC,CAAC;;AAEH,SAAS,eAAe,CAAC,KAAK,EAAE;AAC9B,SAAO;AACL,SAAK,EAAE,KAAK,CAAC,KAAK;AAClB,cAAU,EAAE,KAAK,CAAC,aAAa,CAAC,UAAU;GAC3C,CAAC;CACH;AACD,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,mC","file":"/client/components/App.jsx","sourcesContent":["let App = React.createClass({\n  mixins: [History],\n\n  componentWillMount() {\n    this.sub = Meteor.subscribe('cards');\n    Card.findAll();\n  },\n\n  componentWillUnmount() {\n    this.sub.stop();\n  },\n\n  propTypes: {\n    cards: React.PropTypes.array,\n    selectedId: React.PropTypes.string,\n  },\n\n  createCard(event) {\n    event.stopPropagation();\n    store.dispatch(Actions.createCard());\n  },\n\n  render() {\n    //console.log(\"App has props\", this.props);\n    return (\n      <div className=\"outer\">\n        <Grid fluid={true}>\n\n          <Navbar toggleNavKey={0}>\n            <NavBrand onClick={() => this.history.pushState(null, '/')} style={{cursor: 'pointer'}}>\n              <i className='fa fa-wrench' style={{marginRight: 5}} />\n              Card Creator\n            </NavBrand>\n\n            <CollapsibleNav eventKey={0}>\n\n              <Nav navbar right>\n                <NavItem eventKey={1} href='#' onClick={this.createCard}>\n                  <i className='fa fa-plus' style={{marginRight: 5}} />\n                  Create a Card\n                </NavItem>\n              </Nav>\n\n            </CollapsibleNav>\n          </Navbar>\n        </Grid>\n        <Grid>\n          {React.cloneElement(this.props.children, this.props)}\n        </Grid>\n      </div>\n    );\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    cards: state.cards,\n    selectedId: state.userInterface.selectedId,\n  };\n}\nthis.App = connect(mapStateToProps)(App);\n"]}