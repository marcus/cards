{"version":3,"sources":["meteor://ðŸ’»app/packages/skinnygeek1010_flux-helpers/packages/skinnygeek1010_flux-helpers.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kF","file":"/packages/skinnygeek1010_flux-helpers.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// packages/skinnygeek1010:flux-helpers/flux-helpers.js                //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// watches a reactive collection for changes and emits a changed event // 1\n// (via callback) when it's changed.                                   // 2\ntrackCollection = function(collection, callback) {                     // 3\n  if (!collection || !callback) {                                      // 4\n    throw Error('Collection and callback params needed');              // 5\n  }                                                                    // 6\n                                                                       // 7\n  // only run on the client, not needed for SSR                        // 8\n  if (Meteor.isClient) {                                               // 9\n    Meteor.startup(function() {                                        // 10\n                                                                       // 11\n      Tracker.autorun(function(computation) {                          // 12\n        var docs = collection.find().fetch();                          // 13\n                                                                       // 14\n        if (computation.firstRun) {                                    // 15\n          return;  // ignore first empty run                           // 16\n        }                                                              // 17\n                                                                       // 18\n        if (this.__debugFluxHelpers) { // universal global             // 19\n          console.log('[Tracker] collection changed', docs);           // 20\n        }                                                              // 21\n                                                                       // 22\n        callback(docs);                                                // 23\n      });                                                              // 24\n                                                                       // 25\n    });                                                                // 26\n  }                                                                    // 27\n};                                                                     // 28\n                                                                       // 29\n                                                                       // 30\n// track changes on the viewer's user account                          // 31\ntrackViewer = function(callback) {                                     // 32\n  if (!callback) {                                                     // 33\n    throw Error('Callback param needed');                              // 34\n  }                                                                    // 35\n                                                                       // 36\n  // only run on the client, not needed for SSR                        // 37\n  if (Meteor.isClient) {                                               // 38\n    Meteor.startup(function() {                                        // 39\n                                                                       // 40\n      Tracker.autorun(function(computation) {                          // 41\n        var user = Meteor.user();                                      // 42\n                                                                       // 43\n        if (computation.firstRun) {                                    // 44\n          return;  // ignore first empty run                           // 45\n        }                                                              // 46\n                                                                       // 47\n        if (this.__debugFluxHelpers) { // universal global             // 48\n           console.log('[Tracker] user changed', user);                // 49\n        }                                                              // 50\n        callback(user);                                                // 51\n      });                                                              // 52\n                                                                       // 53\n    });                                                                // 54\n  }                                                                    // 55\n};                                                                     // 56\n                                                                       // 57\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}